//javascript正则表达式
定义：正则表达式是用来匹配字符串中字符组合的模式。

创建一个正则表达式
①使用正则表达式字面量,其由包含在斜杠之间的模式组成
var re = /ab+c/
②使用RegExp对象构造函数
var re = new RegExp("ab+c")

断言
对于文本、词或模式，边界可以用来表明它们的起始或终止部分
边界类断言：
^:匹配输入的开始
$:匹配输入的结束
\b:匹配一个单词的边界，这是一个字符前后没有另一个字的字符位置
例子：
/oo\b/  在 "moon" 中不会匹配到 "oo", 因为 "oo" 后面跟着 "n" 这个单词字符.
/oon\b/ 在 "moon" 中匹配 "oon"， 因为 "oon" 是这个字符串的结尾, 因此后面没有单词字符
\B:匹配非单词边界，这是上一个字符或下一个字符属于同一个类型的位置：要么两者都必须是单词，要么两者必须都是非单词
例子：
/\Bon/ 在 “at noon” 中匹配 “on” ，/ye\B/ 在 "possibly yesterday"中匹配"ye" 。
其他断言：
x(?=y):x被y跟随时匹配x
例子：
/Jack(?=Sprat|Frost)/ “Jack”后跟有“Sprat”或“Frost”的情况下才会得到匹配。不过， 匹配结果不包括“Sprat”或“Frost”
x(?!y):x没有被y紧随时匹配x
(?<=y)x:x跟随y的情况下匹配x
(?<!y)x:x不跟随y时匹配x

字符类
区分各种字符
类型：
\d:匹配任何数字（阿拉伯数字）
\D:匹配任何非数字
\w:匹配基本拉丁字母中的任何字母数字字符
\W:匹配任何不是来自基本拉丁字母的单词字符
\s:匹配单个空白字符
\S:匹配空白以外的单个字符

组和范围
表示表达式字符的组和范围
x|y:匹配x或y任意一个字符
[xyz]和[a-c]:字符集，匹配任意一个包含的字符
[^xyz]和[^abc]:匹配任何没有包含在括号中的字符

量词
表示要匹配的字符或表达式的数量
x*:将前面的项x匹配0次或更多次
x+:将前一项x匹配一次或更多次
x?:将前面的项匹配0或1次
x{n}:其中的n是一个正整数，与前一项x的n次匹配
x{n,}:其中的n是一个正整数，与前一项x至少n次匹配


正则表达式的模式
①使用简单模式：直接由向直接找到的字符构成
②使用特殊字符
\:用于转义
*:匹配一个表达式0次或多次
+:匹配前面一个表达式0次或多次
?:匹配前面一个表达式0次或者1次
注意：如果紧跟在任何量词*、+、?或者{}的后面，将会使量词变为非贪婪（匹配尽量少的字符），和缺省使用的贪婪模式（匹配尽可能多的字符）正好相反


