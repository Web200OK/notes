第一天：
    选择排序:
        步骤：
            首先在未排序的序列中找到最小（大）元素，存放到排序序列最起始位置
            再从剩余的元素中继续寻找最小（大）元素，放到已排序序列的末尾
            重复第二步，知道所有的元素排序完毕

        js实现：
            function aelsectSort(arr){
                let length = arr.length
                let minindex,temp
                for(let i = 0;i<length;i++){
                    minindex = i
                    for(let j = i + 1;j<length;j++){
                        if(arr[j]<arr[minindex]){
                            minindex = j
                        }
                    }
                    temp = arr[i]
                    arr[i] = arr[minindex]
                    arr[minindex] = temp
                }
                return arr
            }

    冒泡排序：
        步骤：
            比较相邻的元素，如果第一个比第二个大则交换它们两个
            对每一对相邻元素做同样的工作，从开始第一队到最后一对，最终得到最后的元素为最大值
            针对所有元素重复以上步骤，除了最后一个，直到没有任何一个数字需要比较
            
        js实现：
            function bubbleSort(arr){
                let length = arr.length
                for(let i = 0;i < length -1;i++){
                    for(let j = 0;j< lenght - 1;j++){
                        if(arr[j]>arr[j+1]){
                            let temp = arr[j+1]
                            arr[j+1] = arr[j]
                            arr[j] = temp
                        }
                    }
                }
                return arr
            }

    异或算法
    位运算
    插入排序
    对数器